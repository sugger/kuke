<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/8/25
 * Time: 16:53
 */

namespace api\modules\v1\controllers;

use api\models\Game;
use api\models\PartnerGame;
use api\models\PartnerServer;
use api\models\PartnerUser;
use common\core\Controller;
use Yii;

class MixController extends Controller
{
    public $errMsg;
    public $errorLogin = [
        1 => '验证PID失败',
        3 => '用户名非法',
    ];
    public $errorIndex = [
        '1' => '验证PID失败',
        3 => '用户名非法',
    ];

    /**
     * @param \yii\base\Action $action
     * @param mixed $result
     * @return mixed
     * 记录日志 统一返回格式
     */
    public function afterAction($action, $result)
    {
        $errorid = 'error' . ucfirst($action->id);//根据控制器ID获取对应错误代码
        $code = $result;
        $result = [];
        if (isset($this->$errorid)) {
            $error = $this->$errorid;
            if (isset($error[$code]))
                $result['msg'] = $error[$code];
        }
        $result['code'] = $code;
        return parent::afterAction($action, json_encode($result)); // TODO: Change the autogenerated stub
    }

    public function actionLogin($pid, $uid, $gid, $sid, $time, $sign, $isclient = 0, $real = 0)
    {
        /**验证PID**/
        $pid = abs((int)$pid);
        $partner = PartnerUser::findMix($pid);
        if (empty($partner) || $partner->status == PartnerUser::STATUS_DISABLE) return 1;


        /**手否具有访问该接口的验证**/
        $check = $partner->checkIpAndAccess(null, Yii::$app->request->pathInfo);
        if ($check['status'] == false) {
            $this->errMsg = $check['msg'];
            return 2;
        };


        /**验证UID**/
        if (!preg_match('/^[0-9A-Za-z]{6,20}$/', $uid)) return 3;//用户名非法
        $user = $this->User($uid, $partner);
        /**获取玩家对象实例，没有玩家则从酷客玩获取，酷客玩没有则创建用户**/
        if (empty($user) || !is_object($user)) return 4; //获取用户信息失败
        if ($user->status == 0) return 5; /*用户已被锁定*/


        /**验证gid**/
        $partnerGame = PartnerGame::findOne(['partnerid' => $partner->id, 'gkey' => $gid]);
        if (empty($partnerGame)) return 6;/*没有游戏运营权限*/
        if ($partnerGame->status == PartnerGame::STATUS_DISABLE) return 7;//游戏已关闭
        $game = Game::findOne($partnerGame->gid);/*本站游戏开关状态不在此验证，关闭混服游戏，需要更改PartnerGame，以便单独控制*/
        if (empty($game)) return 8;/*没有此游戏，或游戏已删除*/

        /*验证sid，先验证partnerServer数据，根据此数据找真正的(本站)区服sid，
         *没有partnerServer数据,如果PartnerGame为自动添加区服状态则，写入新的区服数据*/
        $partnerServer = PartnerServer::findOne(['gid' => $partnerGame->gid, 'pserverid' => $sid]);
        if (empty($partnerServer) && $partnerGame->auto_server = PartnerGame::AUTO_ACTIVE) {
            /*根据规则自动添加区服*/

        }
    }

    /**
     * @param $partnerUid
     * @param $partner
     * @return static
     * 获取用户
     */
    protected function User($partnerUid, $partner)
    {

    }

    protected function getServer($sid)
    {
        return ServerController::getServerBySid($sid);
    }
}