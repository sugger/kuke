<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/8/25
 * Time: 16:53
 */

namespace api\modules\v1\controllers;

use api\models\Game;
use api\models\GameLogin;
use api\models\PartnerGame;
use api\models\PartnerServer;
use api\models\PartnerUser;
use api\models\Server;
use api\models\User;
use common\core\Controller;
use Yii;

class MixController extends Controller
{
    public static $role;
    public static $gamePage;//错误提示详情，在返回JSON.msg 的后面追加
    public $errMsg = '';
    public $errorLogin = [
        1 => '验证PID失败',
        2 => '接口的验证',
        3 => '用户名非法',
        4 => '获取用户信息失败',
        5 => '用户已被锁定',
        6 => '没有游戏运营权限',
        7 => '游戏已关闭',
        8 => '没有此游戏，或游戏已删除',
        9 => '区服编号不存在',
        10 => '区服不存在或已删除',
        11 => '未开服',
        12 => '接口加载失败',
        13 => '接口内部错误',
        14 => '签名错误',
        15 => '时间戳认证失败',
        16 => '区服已被禁止接入',
    ];
    public $errorRole = [
        0 => '查询成功',
        1 => '验证PID失败',
        2 => '接口权限验证失败',
        3 => '时间戳必须为数字',
        4 => '时间戳超时',
        5 => '签名验证失败',
        6 => '没有游戏运营权限',
        7 => '游戏已关闭',
        8 => '没有此游戏，或游戏已删除',
        9 => '区服编号不存在',
        10 => '区服已被禁止接入',
        11 => '区服不存在或已删除',
        12 => '未开服',
        13 => '用户名非法',
        14 => '获取用户信息失败',
        15 => '用户已被锁定',
    ];

    /**
     * 增加游戏登录日志，更新游戏和区服的玩家人数，修改混服玩家登录数据
     * @param $game \api\models\Game
     * @param $server \api\models\Server
     * @param $user \api\models\User
     */
    private static function GameLog($game, $server, $user)
    {
        $todayLog = GameLogin::find()->where('`userid` = :uid and `gameid` = :gid and `sid` = :sid',
            [':uid' => $user->id, ':gid' => $game->id, ':sid' => $server->sid])->orderBy('id desc')->one();
        if ($todayLog) $reg_time = $todayLog->reg_time;
        if (empty($todayLog) || $todayLog->login_time < strtotime(date('Y-m-d 00:00:00'))) $todayLog = new GameLogin();
        $data['GameLogin'] = [
            'userid' => $user->id,
            'gameid' => $game->id,
            'sid' => $server->sid,
            'agent' => $user->tuid,
            'login_time' => (string)time(),
            'fromflag' => $user->from_social
        ];
        if ($todayLog->isNewRecord) $data['GameLogin']['reg_time'] = isset($reg_time) ? $reg_time : time();
        if ($todayLog->load($data) && $todayLog->save()) {
            /**如果查到了注册时间 $reg_time 则角色信息，没有则游戏 和 区服的玩家数量都加1 **/
            if (isset($reg_time)) {
                ServerController::GameRole($user, $server);
            } else {
                $game->game_players++;
                $server->player_num++;
                $server->save(false);
            }
            $game->game_hit++;
            $game->save(false);
            return $todayLog->reg_time;
        }
        return false;
    }

    /**
     * @param \yii\base\Action $action
     * @param mixed $result
     * @return mixed
     * 记录日志 统一返回格式
     */
    public function afterAction($action, $result)
    {
        $errorid = 'error' . ucfirst($action->id);//根据控制器ID获取对应错误代码
        $code = $result;
        $result = [];
        $result['code'] = $code;
        if (isset($this->$errorid)) {
            $error = $this->$errorid;
            if (isset($error[$code]))
                $result['msg'] = $error[$code] . $this->errMsg;
        }
        if (static::$role) $result['data'] = static::$role;
        $response = $code == 200 ? $this->render('gamepage', static::$gamePage) : json_encode($result);
        return parent::afterAction($action, $response); // TODO: Change the autogenerated stub
    }

    public function actionRole($pid, $uid, $gid, $sid, $time, $sign)
    {
        /**验证PID**/
        $pid = abs((int)$pid);
        $partner = PartnerUser::findMix($pid);
        if (empty($partner) || $partner->status == PartnerUser::STATUS_DISABLE) return 1;

        /**手否具有访问该接口的验证**/
        $check = $partner->checkIpAndAccess(null, Yii::$app->request->pathInfo);
        if ($check['status'] == false) {
            $this->errMsg = $check['msg'];
            return 2;
        };
        if (Yii::$app->request->getUserIP() !== '127.0.0.1') { //本地不验证签名和时间戳
            /**验证时间戳，前后不超过十分钟**/
            if (!is_numeric($time)) return 3;
            if ($time + 600 < time() || $time - 600 > time()) return 4;

            /**验证sign**/
            if (md5($pid . $uid . $gid . $sid . $time . $partner->lkey) !== $sign) return 5;
        }
        /**验证gid**/
        $partnerGame = PartnerGame::findOne(['partnerid' => $partner->id, 'gkey' => $gid]);

        if (empty($partnerGame)) return 6;/*没有游戏运营权限*/
        if ($partnerGame->status == PartnerGame::STATUS_DISABLE) return 7;//游戏已关闭

        $game = Game::findOne($partnerGame->gid);/*本站游戏开关状态不在此验证，关闭混服游戏，需要更改PartnerGame，以便单独控制*/
        if (empty($game)) return 8;/*没有此游戏，或游戏已删除*/
        $partnerServer = PartnerServer::findOne(['gid' => $partnerGame->gid, 'pserverid' => $sid]);
        if (!$partnerServer) return 9;//区服编号不存在
        if ($partnerServer->status == PartnerServer::STATUS_DISABLE) return 10;//区服已被禁止接入
        /**验证sid对应本站Server数据**/
        $server = Server::findOne($partnerServer->sid);
        if (empty($server)) return 11;//区服不存在或已删除
        $test_accounts = explode(',', $partner->test_account);
        if ($server->start_time > time() && !in_array($uid, $test_accounts)) return 12;//未开服


        /**验证UID**/
        if (!preg_match('/^[0-9A-Za-z]{6,20}$/', $uid)) return 13;//用户名非法
        $user = User::findByUsername($partner->username . '_' . $uid);
        /**获取玩家对象实例，没有玩家则从酷客玩获取，酷客玩没有则创建用户**/
        if (empty($user) || !is_object($user)) return 14; //获取用户信息失败
        if ($user->status == 0) return 15; /*用户已被锁定*/

        $role = ServerController::GameRole($user, $server);
        static::$role = (array)$role;
        return 0;

    }

    public function actionLogin($pid, $uid, $gid, $sid, $time, $sign, $fcm = 0, $isclient = 0, $real = 0)
    {
        /**验证PID**/
        $pid = abs((int)$pid);
        $partner = PartnerUser::findMix($pid);
        if (empty($partner) || $partner->status == PartnerUser::STATUS_DISABLE) return 1;


        /**手否具有访问该接口的验证**/
        $check = $partner->checkIpAndAccess(null, Yii::$app->request->pathInfo);
        if ($check['status'] == false) {
            $this->errMsg = $check['msg'];
            return 2;
        };

        if (Yii::$app->request->getUserIP() !== '127.0.0.1') { //本地不验证签名和时间戳
            /**验证时间戳，前后不超过十分钟**/
            if (!is_numeric($time) || $time + 600 < time() || $time - 600 > time()) return 15;
            /**验证sign**/
            if (md5($pid . $uid . $gid . $sid . $time . $partner->lkey) !== $sign) return 14;
        }


        /**验证gid**/
        $partnerGame = PartnerGame::findOne(['partnerid' => $partner->id, 'gkey' => $gid]);

        if (empty($partnerGame)) return 6;/*没有游戏运营权限*/
        if ($partnerGame->status == PartnerGame::STATUS_DISABLE) return 7;//游戏已关闭

        $game = Game::findOne($partnerGame->gid);/*本站游戏开关状态不在此验证，关闭混服游戏，需要更改PartnerGame，以便单独控制*/
        if (empty($game)) return 8;/*没有此游戏，或游戏已删除*/

        /*验证sid，先验证partnerServer数据，根据此数据找真正的(本站)区服sid，
         *没有partnerServer数据,如果PartnerGame为自动添加区服状态则，写入新的区服数据*/
        $partnerServer = PartnerServer::findOne(['gid' => $partnerGame->gid, 'pserverid' => $sid]);

        if (empty($partnerServer) && $partnerGame->auto_server == PartnerGame::AUTO_ACTIVE) {
            /*根据规则自动添加区服*/
            $partnerServer = $this->autoServer($sid, $partnerGame->gid, $partner->id);//自动添加区服
        }
        if (!$partnerServer) return 9;//区服编号不存在
        if ($partnerServer->status == PartnerServer::STATUS_DISABLE) return 16;//区服已被禁止接入
        /**验证sid对应本站Server数据**/
        $server = Server::findOne($partnerServer->sid);
        if (empty($server)) return 10;//区服不存在或已删除


        $test_accounts = explode(',', $partner->test_account);
        if ($server->start_time > time() && !in_array($uid, $test_accounts)) return 11;//未开服
        $apiPath = '\api\models\game\\' . $game->game_api;
        if (!method_exists($apiPath, 'LoginUrl')) return 12; /*接口加载失败*/


        /**验证UID**/
        if (!preg_match('/^[0-9A-Za-z]{6,20}$/', $uid)) return 13;//用户名非法
        $user = $this->User($uid, $partner, $server);
        /**获取玩家对象实例，没有玩家则从酷客玩获取，酷客玩没有则创建用户**/
        if (empty($user) || !is_object($user)) return 14; //获取用户信息失败
        if ($user->status == 0) return 15; /*用户已被锁定*/
        Yii::$app->session->set('mixuser',[
            'tuid'=>$partner->id,
            'username'=>$user->username,
            'uid'=>$user->id,
            'gid'=>$game->id,
            'sid'=>$server->sid,
            'serverid'=>$server->serverid,
            'uptime'=>time()
        ]);

        /**调用接口，获取游戏URL*/
        $gameconf = json_decode($game->game_conf, true);
        $info['uid'] = $user->id;
        $info['username'] = $user->username;
        $info['appid'] = $server->cp_gameid ? $server->cp_gameid : $gameconf['game_id'];
        $info['serverid'] = $server->cp_sid ? $server->cp_sid : $server->serverid;
        $info['url'] = $gameconf['game_url'];
        $info['key'] = $gameconf['game_key'];

        $info['game_conf'] = $game->game_conf;
        $info['gid'] = $gid;

        unset($gameconf);
        $gameapi = ServerController::GameUrl($info, ucfirst($game->game_api));
        if ($gameapi['status'] != 1) return 13;
        /**接口内部错误**/
        static::$gamePage=[
            'url'=>$gameapi['url'],
            'client'=>'',
            'swf'=>'',
        ];
        return 200;


    }

    /**
     * @param $sid //serverid 游戏区服编号
     * @param $gid //游戏id
     * @param $pid //合作者id
     */
    protected function autoServer($sid, $gid, $pid)
    {
        $Server = ServerController::getServer($gid, $sid);
        if (empty($Server)) return false;
        $add['PartnerServer'] = [
            'sid' => $Server->sid,
            'gid' => $Server->gid,
            'pserverid' => $Server->serverid,
            'status' => PartnerServer::STATUS_ACTIVE,
            'pid' => $pid,
        ];
        $partnerServer = new PartnerServer();
        if ($partnerServer->load($add) && $partnerServer->save()) {
            return $partnerServer;
        }
        return false;
    }

    /**
     * @param $partnerUid
     * @param $partner
     * @return static
     * 获取用户
     */
    protected function User($partnerUid, $partner, $regserver)
    {
        $username = $partner->username . '_' . $partnerUid;
        $mixUser = User::findByUsername($username, ['from_social' => 'hf', 'tuid' => $partner->id, 'reg_gameid' => $regserver->gid, 'reg_serverid' => $regserver->sid]);
        if ($mixUser) return $mixUser;/*获取到用户信息则返回*/

        /**没获取到用户信息则添加账户**/
        $userData['User'] = [
            'username' => $username,
            'password' => '',
            'salt' => '',
            'email' => $username . '@kkw.com',
            'mobile' => '',
            'idcard' => '',
            'money' => '0.0',
            'total_money' => '0.0',
            'from_social' => 'hf',
            'reg_time' => time(),
            'reg_ip' => ip2long(Yii::$app->request->getUserIP()),
            'last_login_time' => time(),
            'last_login_ip' => ip2long(Yii::$app->request->getUserIP()),
            'update_time' => date('Y-m-d H:i:s'),
            'tuid' => $partner->id,
            'image' => '',
            'score' => '0',
            'score_all' => '0',
            'reg_gameid' => $regserver->gid,
            'reg_serverid' => $regserver->sid,
            'status' => User::STATUS_ACTIVE,
        ];
        $mixUser = new User();
        if ($mixUser->load($userData) && $mixUser->save(false)) {
            return $mixUser;
        }
        return false;
    }

    protected function getServer($sid)
    {
        return ServerController::getServerBySid($sid);
    }
}